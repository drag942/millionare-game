{"version":3,"sources":["pages/GamePage/Game.module.css","pages/GamePage/Menu/Menu.module.css","assets/hand.svg","pages/StartPage/StartPage.module.css","pages/GamePage/Aswers/Answers.module.css","api/api.ts","redux/gameReducer.ts","redux/gameSelector.ts","pages/StartPage/StartPage.tsx","pages/GamePage/Menu/Menu.tsx","pages/GamePage/Aswers/Answers.tsx","pages/GamePage/Game.tsx","hooks/useWindowSize.ts","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","instance","axios","baseURL","initialState","questions","selectedQuestion","result","isStartedGame","isFinishGame","menu","SET_RESULT","SET_MENU","setStartGame","payload","type","setSelectedQuestion","setMenu","setFinishGame","finishGameAsyncAction","dispatch","a","gameReducer","state","action","indexOf","getIsStartedGame","getQuestions","getSelectedQuestion","getMenu","getIsFinishGame","getResult","StartPage","useSelector","useDispatch","to","gameResult","className","styles","wrapper","container","leftSide","handImg","alt","src","handSvg","rightSide","subtitle","title","onClick","get","then","response","data","key","request","hasOwnProperty","Math","floor","random","length","Object","keys","btn","Menu","slice","reverse","map","item","classnames","selectedItem","disabledItem","line","Answers","answers","onAnswerClick","selected","showAnswers","disabled","answer","variant","selectedBtn","successBtn","isRight","errorBtn","body","Game","useState","setSelected","setShowAnswers","setDisabled","showMobileMenu","setShowMobileMenu","windowSize","width","height","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","isLastQuestion","question","mobileMenuHamburger","isOpen","menuClicked","strokeWidth","rotate","color","borderRadius","animationDuration","mobileMenu","setTimeout","App","component","path","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26e3ff81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Game_wrapper__3OlMK\",\"question\":\"Game_question__z6czl\",\"leftSide\":\"Game_leftSide__T-9NJ\",\"rightSide\":\"Game_rightSide__2nX4i\",\"mobileMenu\":\"Game_mobileMenu__2zgZ9\",\"mobileMenuHamburger\":\"Game_mobileMenuHamburger__HgSpr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Menu_item__2n42M\",\"selectedItem\":\"Menu_selectedItem__2k5-1\",\"disabledItem\":\"Menu_disabledItem__50RGN\",\"line\":\"Menu_line__2pf1X\"};","module.exports = __webpack_public_path__ + \"static/media/hand.36d0985d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StartPage_wrapper__29SXC\",\"container\":\"StartPage_container__3J2RZ\",\"rightSide\":\"StartPage_rightSide__3pC_L\",\"title\":\"StartPage_title__16EFn\",\"subtitle\":\"StartPage_subtitle__NQngl\",\"btn\":\"StartPage_btn__1m8Am\",\"handImg\":\"StartPage_handImg__ukQ25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answers\":\"Answers_answers__xs4YG\",\"item\":\"Answers_item__1YvYa\",\"btn\":\"Answers_btn__3VouX\",\"selectedBtn\":\"Answers_selectedBtn__2uVJi\",\"line\":\"Answers_line__1UGtk\",\"errorBtn\":\"Answers_errorBtn__iU5Ks\",\"successBtn\":\"Answers_successBtn__11Om5\",\"disabled\":\"Answers_disabled__3qspq\",\"variant\":\"Answers_variant__3muZF\"};","import * as axios from \"axios\";\r\n\r\n// @ts-ignore\r\nconst instance = axios.create({\r\n    baseURL: '/db.json'\r\n});\r\n\r\nexport const getQuestions = () => {\r\n    return instance.get().then((response: { data: any; }) => response.data);\r\n};","import {Dispatch} from \"redux\";\r\nimport {getQuestions} from \"../api/api\";\r\n\r\nconst initialState = {\r\n    questions: [],\r\n    selectedQuestion: 0,\r\n    result: 0,\r\n    isStartedGame: false,\r\n    isFinishGame: false,\r\n    menu:[],\r\n};\r\n\r\n\r\nconst SET_START_GAME = 'gameReducer/SET_START_GAME';\r\nconst SET__QUESTIONS = 'gameReducer/SET_QUESTIONS';\r\nconst SET_SELECTED_QUESTION = 'gameReducer/SET_SELECTED_QUESTION';\r\nconst SET_RESULT = 'gameReducer/SET_RESULT';\r\nconst SET_FINISH_GAME = 'gameReducer/SET_FINISH_GAME';\r\nconst SET_MENU = 'gameReducer/SET_MENU';\r\nconst SET_NEXT_QUESTION = 'gameReducer/SET_NEXT_QUESTION';\r\n\r\n\r\nconst gameReducer = (state = initialState, action:any) => {\r\n    switch (action.type) {\r\n\r\n        case SET_START_GAME: {\r\n            return {\r\n                ...state,\r\n                isStartedGame: action.payload,\r\n            }\r\n        }\r\n\r\n        case SET__QUESTIONS: {\r\n            return {\r\n                ...state,\r\n                questions: action.payload,\r\n            }\r\n        }\r\n\r\n        case SET_SELECTED_QUESTION: {\r\n            return {\r\n                ...state,\r\n                selectedQuestion: action.payload,\r\n            }\r\n        }\r\n        case SET_RESULT: {\r\n            return {\r\n                ...state,\r\n                result: action.payload,\r\n            }\r\n        }\r\n        case SET_FINISH_GAME: {\r\n            return {\r\n                ...state,\r\n                isFinishGame: action.payload,\r\n            }\r\n        }\r\n\r\n        case SET_MENU: {\r\n            return {\r\n                ...state,\r\n                menu: action.payload,\r\n            }\r\n        }\r\n\r\n        case SET_NEXT_QUESTION: {\r\n\r\n            return {\r\n                ...state,\r\n                // @ts-ignore\r\n                selectedQuestion: state.menu[state.menu.indexOf(state.selectedQuestion) + 1],\r\n             }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\n\r\nconst setStartGame = (payload:boolean) => ({\r\n    type: SET_START_GAME,\r\n    payload,\r\n});\r\n\r\nconst setQuestions = (payload: []) => ({\r\n    type: SET__QUESTIONS,\r\n    payload,\r\n});\r\n\r\nconst setSelectedQuestion = (payload:string) => ({\r\n    type: SET_SELECTED_QUESTION,\r\n    payload,\r\n});\r\n\r\nconst setMenu = (payload:string[]) => ({\r\n    type: SET_MENU,\r\n    payload,\r\n});\r\n\r\nexport const setNextQuestion = () => ({\r\n    type: SET_NEXT_QUESTION,\r\n});\r\n\r\nconst setResult  = (payload: string) => ({\r\n    type: SET_RESULT,\r\n    payload,\r\n});\r\n\r\nconst setFinishGame = (payload: boolean) => ({\r\n    type: SET_FINISH_GAME,\r\n    payload,\r\n});\r\n\r\n\r\n\r\n\r\nexport const startGameAsyncAction = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const request = await getQuestions();\r\n\r\n        let questions:any = {};\r\n\r\n        for ( let key in request.questions) {\r\n            if (request.questions.hasOwnProperty(key))\r\n            questions[key] = request.questions[key][Math.floor(Math.random()*request.questions[key].length)]\r\n        }\r\n\r\n        dispatch(setQuestions(questions));\r\n        dispatch(setMenu(Object.keys(questions)));\r\n        dispatch(setSelectedQuestion(Object.keys(questions)[0]));\r\n        dispatch(setStartGame(true));\r\n        dispatch(setFinishGame(false));\r\n    }\r\n};\r\n\r\nexport const finishGameAsyncAction = (result: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(setResult(result));\r\n        dispatch(setStartGame(false));\r\n        dispatch(setFinishGame(true));\r\n    }\r\n};\r\n\r\n\r\nexport default gameReducer;","export const getIsStartedGame = (state:any) => {\r\n    return state.gameReducer.isStartedGame;\r\n};\r\n\r\nexport const getQuestions = (state: any) => {\r\n    return state.gameReducer.questions;\r\n};\r\n\r\nexport const getSelectedQuestion = (state:any) => {\r\n    return state.gameReducer.selectedQuestion;\r\n};\r\n\r\nexport const getMenu = (state:any) => {\r\n    return state.gameReducer.menu;\r\n};\r\n\r\nexport const getIsFinishGame = (state: any) => {\r\n    return state.gameReducer.isFinishGame;\r\n};\r\n\r\nexport const getResult = (state: any) => {\r\n    return state.gameReducer.result;\r\n};","import React from 'react';\r\nimport handSvg from '../../assets/hand.svg'\r\nimport styles from './StartPage.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startGameAsyncAction} from \"../../redux/gameReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getIsFinishGame, getIsStartedGame, getResult} from \"../../redux/gameSelector\";\r\n\r\n\r\nconst StartPage:React.FC = ():React.ReactElement => {\r\n\r\n    const {isStartedGame, isFinishGame, result} = useSelector(state => ({\r\n        isStartedGame: getIsStartedGame(state),\r\n        isFinishGame: getIsFinishGame(state),\r\n        result: getResult(state),\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    if(isStartedGame) return <Redirect to={'/game'}/>;\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(startGameAsyncAction());\r\n    };\r\n\r\n    const gameResult = result ? result : '0';\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <div className={styles.leftSide}>\r\n                    <img className={styles.handImg} alt={'hand'} src={handSvg}/>\r\n                </div>\r\n                <div className={styles.rightSide}>\r\n                    {isFinishGame && <p className={styles.subtitle}>Total score:</p>}\r\n                    <h1 className={styles.title}>{ isFinishGame ? `$${gameResult} earned` : 'Who wants to be a millionaire?'}</h1>\r\n                    <button onClick={onClickHandler} className={styles.btn} >{isFinishGame ? 'Try again' : 'Start'}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartPage;","import React from 'react';\r\nimport classnames from \"classnames\";\r\nimport styles from \"./Menu.module.css\";\r\n\r\n\r\ninterface MenuProps {\r\n    menu: string[],\r\n    selectedQuestion: string,\r\n}\r\n\r\nconst Menu:React.FC<MenuProps> = ({menu, selectedQuestion}):React.ReactElement => {\r\n    return (\r\n        <div>\r\n\r\n            {menu.slice(0).reverse().map((item: string) => {\r\n                return <div key={item}>\r\n                    <p\r\n                        className={classnames(styles.item ,{\r\n                            [styles.selectedItem]: item === selectedQuestion,\r\n                            [styles.disabledItem]: menu.indexOf(item) < menu.indexOf(selectedQuestion)\r\n                        })}\r\n                    >{`$${item}`}<span className={styles.line}/></p>\r\n                </div>\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\nimport classnames from \"classnames\";\r\nimport styles from \"./Answers.module.css\";\r\n\r\ninterface AnswersProps {\r\n    answers: {\r\n        variant: string,\r\n        body: string,\r\n        isRight: boolean,\r\n    }[\r\n\r\n    ],\r\n    onAnswerClick: (answer: string) => void,\r\n    selected: string | null,\r\n    showAnswers: boolean,\r\n    disabled: boolean,\r\n}\r\n\r\nconst Answers:React.FC<AnswersProps> = ({answers, onAnswerClick, selected, showAnswers, disabled}) => {\r\n\r\n    return (\r\n        <div className={styles.answers}>\r\n            {answers.map((answer:any) => {\r\n                return <div key={answer.variant} className={styles.item}><button\r\n                    className={classnames( {\r\n                        [styles.btn]: true,\r\n                        [styles.selectedBtn]: selected === answer.variant,\r\n                        [styles.successBtn]: showAnswers && answer.isRight,\r\n                        [styles.errorBtn]: showAnswers && !answer.isRight,\r\n                    })}\r\n                    key={answer.body}\r\n                    onClick={() => onAnswerClick(answer)}\r\n                    disabled={disabled}\r\n                >\r\n                    <span className={styles.variant}>{answer.variant}</span>\r\n                    {' ' + answer.body}\r\n                    <div className={styles.line}/>\r\n                </button></div>\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Answers;","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsStartedGame, getMenu, getQuestions, getSelectedQuestion} from \"../../redux/gameSelector\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {finishGameAsyncAction, setNextQuestion} from \"../../redux/gameReducer\";\r\nimport styles from './Game.module.css'\r\nimport Menu from \"./Menu/Menu\";\r\nimport HamburgerMenu from 'react-hamburger-menu';\r\nimport Answers from \"./Aswers/Answers\";\r\nimport {useWindowSize} from \"../../hooks/useWindowSize\";\r\n\r\ninterface Question {\r\n    question: string | undefined,\r\n    answers: {variant: string, isRight: boolean, body: string}[]\r\n}\r\n\r\nconst Game:React.FC = ():React.ReactElement => {\r\n\r\n    const {questions, selectedQuestion, isStartedGame, menu} = useSelector(state =>\r\n        ({\r\n            questions: getQuestions(state),\r\n            selectedQuestion: getSelectedQuestion(state),\r\n            isStartedGame: getIsStartedGame(state),\r\n            menu: getMenu(state)\r\n        })\r\n    );\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const [selected, setSelected] = useState(null);\r\n    const [showAnswers, setShowAnswers] = useState(false);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [showMobileMenu, setShowMobileMenu] = useState(false);\r\n    const windowSize = useWindowSize();\r\n    \r\n    useEffect(() => {\r\n       if (windowSize.width > 767 && showMobileMenu) {\r\n          setShowMobileMenu(false)\r\n       } \r\n    }, [showMobileMenu, windowSize]);\r\n\r\n    const isLastQuestion = selectedQuestion === menu[menu.length - 1];\r\n\r\n    const onAnswerClickHandler = (answer:any) => {\r\n        setDisabled(true);\r\n        setSelected(answer.variant);\r\n        setTimeout(() => {\r\n            setShowAnswers(true);\r\n            setSelected(null);\r\n            setTimeout(() => {\r\n                if (answer.isRight) {\r\n                    if (isLastQuestion) {\r\n                        dispatch(finishGameAsyncAction(selectedQuestion))\r\n                    } else {\r\n                        dispatch(setNextQuestion());\r\n                    }\r\n                } else {\r\n                    dispatch(finishGameAsyncAction(menu[menu.indexOf(selectedQuestion) - 1]))\r\n                }\r\n                setShowAnswers(false);\r\n                setDisabled(false);\r\n            }, 1000);\r\n        }, 1000);\r\n    };\r\n\r\n    if (!isStartedGame) return <Redirect to={'/'}/>;\r\n\r\n    let question:Question = {question: '', answers:[]};\r\n\r\n    for(let key in questions) {\r\n        if (key === selectedQuestion){\r\n            if(questions.hasOwnProperty(key))\r\n            question = questions[key];\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.mobileMenuHamburger}>\r\n                <HamburgerMenu\r\n                    isOpen={showMobileMenu}\r\n                    menuClicked={()=>{setShowMobileMenu(!showMobileMenu)}}\r\n                    width={18}\r\n                    height={15}\r\n                    strokeWidth={3}\r\n                    rotate={0}\r\n                    color='black'\r\n                    borderRadius={0}\r\n                    animationDuration={0.5}\r\n                />\r\n            </div>\r\n            {!showMobileMenu ? <div className={styles.leftSide}>\r\n                <p className={styles.question}>{question.question}</p>\r\n                <Answers\r\n                    answers={question.answers}\r\n                    onAnswerClick={onAnswerClickHandler}\r\n                    selected={selected}\r\n                    showAnswers={showAnswers}\r\n                    disabled={disabled}\r\n                />\r\n            </div> : <div className={styles.mobileMenu}>\r\n                    <Menu menu={menu} selectedQuestion={selectedQuestion}/>\r\n            </div>}\r\n            <div className={styles.rightSide}>\r\n                <Menu menu={menu} selectedQuestion={selectedQuestion}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;","import {useEffect, useState} from \"react\";\r\n\r\nexport const useWindowSize = () => {\r\n\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: 0,\r\n        height: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            // @ts-ignore\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowSize;\r\n};\r\n\r\n","import React from 'react';\nimport './App.css';\nimport StartPage from \"./pages/StartPage/StartPage\";\nimport { Switch, Route } from 'react-router-dom';\nimport Game from \"./pages/GamePage/Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route component={StartPage} path={'/'}/>\n          <Route component={Game} path={'/game'}/>\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport gameReducer from \"./gameReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    gameReducer\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}